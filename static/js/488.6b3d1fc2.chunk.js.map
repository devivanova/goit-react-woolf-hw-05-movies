{"version":3,"file":"static/js/488.6b3d1fc2.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/MovieSearch/MoviesSearch.jsx","services/moviesAPI.js"],"sourcesContent":["import React from 'react';\n\nconst Error = ({ error }) => {\n  return <div>'Sorry, something went wrong :('</div>;\n};\n\nexport default Error;","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 100px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 24px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const MovieItem = styled.li`\n  border-radius: 10px;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  border-radius: 10px;\n  justify-content: center;\n  align-items: center;\n  > img {\n    object-fit: cover;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  font-size: 18px;\n  padding: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 18px;\n  padding-top: 10px 10px;\n  overflow: hidden;\n  margin-bottom: 10px;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: 100%;\n  height: auto;\n  object-fit: cover;\n`;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultImg from '../../images/default-image.png';\nimport {\n  ImgWrapper,\n  InfoWrapper,\n  MovieItem,\n  MovieList,\n  MoviePoster,\n  MovieTitle,\n} from './MoviesList.styled';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n      {movies.map(\n        ({\n          id,\n          title,\n          name,\n          poster_path,\n          original_title,\n          vote_average,\n          release_date,\n        }) => (\n          <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n            <MovieItem>\n              <ImgWrapper>\n                <MoviePoster\n                  src={poster_path ? BASE_IMG_URL + poster_path : defaultImg}\n                  alt={title || name}\n                />\n              </ImgWrapper>\n              <InfoWrapper>\n                <MovieTitle>\n                  {original_title || title || name}\n                  {release_date ? ` (${release_date.slice(0, 4)})` : ''}\n                </MovieTitle>\n                <p>\n                  Raiting:{' '}\n                  {vote_average ? `${Math.round(vote_average * 10)}%` : '-'}\n                </p>\n              </InfoWrapper>\n            </MovieItem>\n          </Link>\n        )\n      )}\n    </MovieList>\n  );\n}\n\nexport default MoviesList;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  border-radius: 3px;\n  border: 1px solid #8c4faf;\n  overflow: hidden;\n`;\n\nexport const FormField = styled.label`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity var(--animation-duration) var(--timing-function);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;","import React, { useState, useRef } from 'react';\n\nimport { Form, FormField, SearchButton, SearchInput } from './Searchbar.styled';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const prevQueryRef = useRef('');\n\n  const handleSearchQuery = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      return toast.error('Введіть назву фільму');\n    }\n    if (!query) {\n      return toast.error(\n        'Sorry, there are no films matching your search query. Please try again.'\n      );\n    }\n    if (prevQueryRef.current !== query) {\n      onSubmit(query);\n    }\n    prevQueryRef.current = query;\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <SearchButton type=\"submit\">\n          <BiSearchAlt size=\"24\" />\n        </SearchButton>\n        <FormField>\n          <SearchInput\n            autoComplete=\"off\"\n            name=\"query\"\n            type=\"text\"\n            autoFocus\n            placeholder=\"Search movie\"\n            onChange={handleSearchQuery}\n            value={query}\n          />\n        </FormField>\n      </Form>\n    </Container>\n  );\n};\n\nexport default Searchbar;","import React, { useEffect, useState } from 'react';\nimport { getMovieSearch } from 'services/moviesAPI';\nimport Error from 'components/Error/Error';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Status = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  RESOLVE: 'resolve',\n  ERROR: 'error',\n};\n\nconst MoviesSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchText = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!searchText) {\n      return;\n    }\n    setStatus(Status.LOADING);\n    getMovieSearch(searchText)\n      .then(movies => {\n        setMovies(movies);\n        setStatus(Status.RESOLVE);\n      })\n      .catch(error => {\n        setMovies([]);\n        setError(error);\n        setStatus(Status.ERROR);\n      });\n  }, [searchText]);\n\n  const onChangeQuery = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={onChangeQuery} />\n      {status === 'loading' && <Loader />}\n      {status === Status.RESOLVE && <MoviesList movies={movies} />}\n      {status === Status.ERROR && <Error error={error} />}\n    </>\n  );\n};\n\nexport default MoviesSearch;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a56a1677bac2a6664dd2ad898620a49c';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('trending/all/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function getMovieSearch(query) {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n  return response.data.results;\n}\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n}\n\nexport async function getMovieReview(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}"],"names":["_ref","error","_jsx","children","MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","ImgWrapper","_templateObject3","InfoWrapper","_templateObject4","MovieTitle","_templateObject5","MoviePoster","_templateObject6","movies","location","useLocation","map","_ref2","id","title","name","poster_path","original_title","vote_average","release_date","Link","to","concat","state","from","_jsxs","src","defaultImg","alt","slice","Math","round","Form","FormField","SearchInput","SearchButton","onSubmit","_useState","useState","_useState2","_slicedToArray","query","setQuery","prevQueryRef","useRef","Container","event","preventDefault","trim","toast","current","type","BiSearchAlt","size","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","Status","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchText","get","setMovies","_useState3","_useState4","status","setStatus","_useState5","_useState6","setError","useEffect","getMovieSearch","then","catch","_Fragment","Searchbar","Loader","MoviesList","Error","axios","API_KEY","getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","params","api_key","sent","abrupt","data","results","stop","getMovieDetails","_x","_getMovieDetails","_callee2","movieId","_context2","_x2","_getMovieSearch","_callee3","_context3","getMovieCredits","_x3","_getMovieCredits","_callee4","_context4","language","getMovieReview","_x4","_getMovieReview","_callee5","_context5"],"sourceRoot":""}