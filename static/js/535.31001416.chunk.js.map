{"version":3,"file":"static/js/535.31001416.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/HomePage/Homepage.styled.js","pages/HomePage/Homepage.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 100px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 24px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const MovieItem = styled.li`\n  border-radius: 10px;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  border-radius: 10px;\n  justify-content: center;\n  align-items: center;\n  > img {\n    object-fit: cover;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  font-size: 18px;\n  padding: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 18px;\n  padding-top: 10px 10px;\n  overflow: hidden;\n  margin-bottom: 10px;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: 100%;\n  height: auto;\n  object-fit: cover;\n`;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultImg from '../../images/default-image.png';\nimport {\n  ImgWrapper,\n  InfoWrapper,\n  MovieItem,\n  MovieList,\n  MoviePoster,\n  MovieTitle,\n} from './MoviesList.styled';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n      {movies.map(\n        ({\n          id,\n          title,\n          name,\n          poster_path,\n          original_title,\n          vote_average,\n          release_date,\n        }) => (\n          <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n            <MovieItem>\n              <ImgWrapper>\n                <MoviePoster\n                  src={poster_path ? BASE_IMG_URL + poster_path : defaultImg}\n                  alt={title || name}\n                />\n              </ImgWrapper>\n              <InfoWrapper>\n                <MovieTitle>\n                  {original_title || title || name}\n                  {release_date ? ` (${release_date.slice(0, 4)})` : ''}\n                </MovieTitle>\n                <p>\n                  Raiting:{' '}\n                  {vote_average ? `${Math.round(vote_average * 10)}%` : '-'}\n                </p>\n              </InfoWrapper>\n            </MovieItem>\n          </Link>\n        )\n      )}\n    </MovieList>\n  );\n}\n\nexport default MoviesList;","import styled from 'styled-components';\n\nexport const MovieListName = styled.h1`\n  margin-bottom: 20px;\n`;","import React, { useEffect, useState } from 'react';\nimport { getTrendingMovies } from '../../services/moviesAPI';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { MovieListName } from './Homepage.styled';\nconst Homepage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(setMovies);\n  }, []);\n\n  return (\n    <section>\n      <MovieListName>Trending today</MovieListName>\n      <MoviesList movies={movies} />\n    </section>\n  );\n};\n\nexport default Homepage;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a56a1677bac2a6664dd2ad898620a49c';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('trending/all/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function getMovieSearch(query) {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n  return response.data.results;\n}\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n}\n\nexport async function getMovieReview(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}"],"names":["MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","ImgWrapper","_templateObject3","InfoWrapper","_templateObject4","MovieTitle","_templateObject5","MoviePoster","_templateObject6","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","name","poster_path","original_title","vote_average","release_date","Link","to","concat","state","from","_jsxs","src","defaultImg","alt","slice","Math","round","MovieListName","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","getTrendingMovies","then","MoviesList","axios","API_KEY","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","params","api_key","sent","abrupt","data","results","stop","getMovieDetails","_x","_getMovieDetails","_callee2","movieId","_context2","getMovieSearch","_x2","_getMovieSearch","_callee3","query","_context3","getMovieCredits","_x3","_getMovieCredits","_callee4","_context4","language","getMovieReview","_x4","_getMovieReview","_callee5","_context5"],"sourceRoot":""}